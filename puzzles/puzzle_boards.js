const puzzleBoards = [
	{
		"order": 3,
		"puzzleKey": "hallway",
		"altText": "A 3-block planar puzzle.",
		"isHidden": false,
		"displaySetup": [4, 4, 4, 4, 4],
		"symbolSet": symbolSets.nineDigits,
		"puzzleCells": [[5, 0, 9, 4, 8, 0, 0, 0, 0], [0, 6, 0, 0, 0, 0, 0, 9, 0], [0, 2, 0, 0, 0, 1, 0, 0, 3]],
		"halfEdges": [[0, 1, 1, 0], [0, 1, 2, 0], [0, 2, 0, 0], [0, 2, 3, 0]],
		"emptyCells": 18,
		"solution": [
			[5, 3, 9, 4, 8, 6, 2, 1, 7],
			[1, 6, 4, 3, 7, 2, 8, 9, 5],
			[7, 2, 8, 9, 5, 1, 6, 4, 3]
		]
	},
	{
		"order": 3,
		"puzzleKey": "courtyard",
		"altText": "An 18-block nonplanar puzzle.",
		"isHidden": false,
		"displaySetup": [3, 3, 4, 4, 4],
		"symbolSet": symbolSets.nineDigits,
		"puzzleCells": [[4, 5, 0, 0, 8, 7, 1, 0, 6], [7, 0, 3, 0, 0, 0, 2, 0, 1], [8, 6, 0, 0, 2, 3, 0, 0, 4], [8, 0, 0, 3, 0, 5, 0, 1, 0], [0, 2, 0, 0, 7, 4, 6, 0, 0], [0, 0, 5, 7, 0, 1, 9, 4, 0], [2, 0, 3, 0, 5, 0, 1, 0, 7], [5, 0, 0, 6, 7, 0, 0, 0, 8], [6, 0, 0, 0, 1, 8, 0, 0, 2], [2, 0, 8, 9, 0, 4, 0, 0, 0], [1, 4, 3, 5, 0, 6, 0, 0, 0], [0, 7, 0, 3, 1, 2, 0, 0, 5], [7, 0, 0, 0, 6, 5, 3, 0, 9], [4, 7, 0, 9, 0, 2, 0, 0, 0], [8, 0, 0, 9, 2, 1, 0, 4, 7], [5, 0, 0, 0, 0, 1, 0, 0, 3], [6, 0, 0, 0, 5, 8, 0, 2, 9], [0, 3, 0, 7, 9, 4, 1, 0, 6]],
		"halfEdges": [[4, 1, 0, 0], [1, 2, 0, 0], [3, 13, 0, 0], [13, 5, 0, 0], [6, 7, 0, 0], [7, 8, 0, 0], [9, 10, 0, 0], [10, 11, 0, 0], [12, 0, 0, 0], [0, 14, 0, 0], [15, 16, 0, 0], [16, 17, 0, 0], [4, 3, 2, 0], [3, 6, 2, 0], [1, 0, 2, 0], [0, 7, 2, 0], [2, 5, 2, 0], [5, 8, 2, 0], [9, 12, 2, 0], [12, 15, 2, 0], [10, 13, 2, 0], [13, 16, 2, 0], [11, 14, 2, 0], [14, 17, 2, 0]],
		"emptyCells": 78,
		"solution": [
			[4, 5, 9, 3, 8, 7, 1, 2, 6],
			[7, 4, 3, 8, 6, 5, 2, 9, 1],
			[8, 6, 9, 1, 2, 3, 5, 7, 4],
			[8, 9, 6, 3, 4, 5, 7, 1, 2],
			[5, 2, 1, 9, 7, 4, 6, 3, 8],
			[2, 3, 5, 7, 8, 1, 9, 4, 6],
			[2, 8, 3, 4, 5, 9, 1, 6, 7],
			[5, 1, 4, 6, 7, 2, 9, 3, 8],
			[6, 9, 7, 3, 1, 8, 4, 5, 2],
			[2, 5, 8, 9, 7, 4, 1, 3, 6],
			[1, 4, 3, 5, 8, 6, 2, 9, 7],
			[6, 7, 9, 3, 1, 2, 4, 8, 5],
			[7, 1, 2, 4, 6, 5, 3, 8, 9],
			[4, 7, 1, 9, 6, 2, 8, 3, 5],
			[8, 6, 3, 9, 2, 1, 5, 4, 7],
			[5, 9, 7, 6, 2, 1, 8, 4, 3],
			[6, 1, 4, 3, 5, 8, 7, 2, 9],
			[2, 3, 8, 7, 9, 4, 1, 5, 6]
		]
	},
	{
		"order": 3,
		"puzzleKey": "garden",
		"altText": "A 9-block planar puzzle with rotation.",
		"isHidden": false,
		"displaySetup": [3, 3, 1, 1, 4],
		"symbolSet": symbolSets.threeSet,
		// [[4, 0, 2, 9, 8, 5, 3, 1, 0], [6, 8, 5, 4, 3, 1, 7, 2, 9], [2, 9, 4, 5, 1, 6, 8, 7, 3], [1, 0, 0, 6, 7, 2, 8, 4, 0], [0, 0, 9, 2, 3, 0, 7, 6, 0], [5, 3, 8, 1, 0, 4, 2, 9, 7], [0, 9, 2, 8, 0, 7, 0, 5, 6], [0, 0, 1, 7, 0, 0, 0, 2, 0], [9, 4, 3, 5, 0, 6, 1, 0, 0]]
		// [[4, 0, 2, 9, 8, 5, 3, 1, 0], [6, 8, 5, 4, 3, 1, 7, 2, 9], [2, 9, 4, 5, 1, 6, 8, 7, 3], [1, 0, 0, 0, 0, 2, 8, 4, 0], [0, 0, 0, 0, 3, 0, 7, 6, 0], [5, 3, 0, 0, 0, 4, 2, 0, 7], [0, 9, 2, 8, 0, 0, 0, 0, 6], [0, 0, 1, 7, 0, 0, 0, 2, 0], [9, 4, 0, 5, 0, 6, 0, 0, 0]]
		"puzzleCells": [[0, 0, 0, 0, 3, 0, 7, 6, 0], [0, 0, 5, 0, 3, 0, 7, 2, 0], [2, 9, 0, 0, 0, 6, 8, 0, 0], [1, 0, 0, 0, 0, 2, 8, 0, 0], [0, 0, 0, 9, 0, 0, 3, 1, 0], [5, 0, 0, 0, 0, 4, 0, 0, 7], [0, 9, 2, 8, 0, 0, 0, 0, 6], [0, 0, 1, 7, 0, 0, 0, 2, 0], [9, 4, 0, 5, 0, 6, 0, 0, 0]],
		"halfEdges": [[4, 1, 0, 0], [1, 2, 2, 0], [1, 2, 3, 6], [4, 3, 1, 0], [3, 0, 3, 0], [3, 0, 2, 6], [4, 5, 2, 0], [5, 6, 1, 0], [5, 6, 0, 6], [4, 7, 3, 0], [7, 8, 0, 0], [7, 8, 1, 6]],
		"emptyCells": 50,
		"solution": [
			[4, 5, 9, 2, 3, 8, 7, 6, 1],
			[6, 8, 5, 4, 3, 1, 7, 2, 9],
			[2, 9, 4, 5, 1, 6, 8, 7, 3],
			[1, 9, 3, 6, 7, 2, 8, 4, 5],
			[4, 7, 2, 9, 8, 5, 3, 1, 6],
			[5, 3, 8, 1, 6, 4, 2, 9, 7],
			[4, 9, 2, 8, 3, 7, 1, 5, 6],
			[8, 5, 1, 7, 4, 9, 6, 2, 3],
			[9, 4, 3, 5, 2, 6, 1, 8, 7]
		]
	},
	{
		"order": 3,
		"puzzleKey": "temp",
		"altText": "A 3-block planar puzzle with rotation and reflection.",
		"isHidden": false,
		"displaySetup": [4, 4, 4, 7, 4],
		"symbolSet": symbolSets.effSet,
		"puzzleCells": [[6, 5, 9, 2, 1, 3, 7, 8, 4], [7, 2, 3, 8, 4, 6, 1, 9, 5], [1, 6, 7, 9, 2, 5, 4, 3, 8]],
		"halfEdges": [[0, 1, 0, 0], [0, 2, 3, 0], [1, 0, 3, 7], [2, 0, 0, 7]],
		"emptyCells": 0,
		"solution": [
			[6, 5, 9, 2, 1, 3, 7, 8, 4],
			[7, 2, 3, 8, 4, 6, 1, 9, 5],
			[1, 6, 7, 9, 2, 5, 4, 3, 8]
		]
	},
	{
		"order": 9,
		"puzzleKey": "symbols",
		"isHidden": false,
		"displaySetup": [1, 1, 0, 0, 0],
		"symbolSet": symbolSets.setTest,
		"puzzleCells": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		"halfEdges": [],
		"emptyCells": 0,
		"solution": [
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
	},
	{
		"order": 1,
		"puzzleKey": "ns_heart",
		"isHidden": true,
		"displaySetup": [2, 3, 0, 1, 0],
		"symbolSet": symbolSets.heartSet,
		"puzzleCells": [[0]],
		"halfEdges": [[0, 0, 0, 7]],
		"emptyCells": 1,
		"solution": [[1]]
	}
];
